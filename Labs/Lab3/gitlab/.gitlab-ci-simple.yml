# Simplified GitLab CI/CD Pipeline for Python with SonarQube

stages:
  - build
  - test
  - analyze
  - deploy

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

cache:
  paths:
    - .cache/pip
    - .venv/

# Build and install dependencies
build:
  stage: build
  image: python:3.11
  script:
    - python -m venv .venv
    - source .venv/bin/activate
    - pip install --upgrade pip
    - pip install -r requirements.txt
    - pip install -r requirements-dev.txt
  artifacts:
    paths:
      - .venv/

# Run tests with coverage
test:
  stage: test
  image: python:3.11
  script:
    - source .venv/bin/activate
    - pytest --cov=src --cov-report=xml --cov-report=term
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    paths:
      - coverage.xml
  dependencies:
    - build

# SonarQube analysis
sonarqube:
  stage: analyze
  image: sonarsource/sonar-scanner-cli:latest
  script:
    - sonar-scanner
      -Dsonar.projectKey=${CI_PROJECT_NAME}
      -Dsonar.sources=src
      -Dsonar.tests=tests
      -Dsonar.host.url=${SONAR_HOST_URL}
      -Dsonar.login=${SONAR_TOKEN}
      -Dsonar.python.coverage.reportPaths=coverage.xml
  dependencies:
    - test
  only:
    - main
    - develop

# Deploy application
deploy:
  stage: deploy
  image: alpine:latest
  script:
    - echo "Deploying application..."
    - echo "Add your deployment commands here"
  when: manual
  only:
    - main
